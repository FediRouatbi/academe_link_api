# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  user_id: Int!
  user_name: String!
  email: String!
  first_name: String!
  last_name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ClassroomTest {
  classroom_id: Float!
  classroom_name: String!
  createdAt: DateTime!
}

type Student {
  student_id: Float!
  classroom: ClassroomTest
  user: User
}

type Subject {
  """Example field (placeholder)"""
  id: Int!

  """Example field (placeholder)"""
  name: String!
}

type TeacherCourses {
  classroom_id: Float!
  subject_id: Float!
}

type Teacher {
  teacher_id: Int!
  user: User!
  course: [TeacherCourses!]!
}

type Topic {
  content: String!
}

type Course {
  id: Float!
  classroom: Classroom!
  teacher: Teacher!
  subject: Subject!
  createdAt: DateTime
  updatedAt: DateTime
  topic: [Topic!]
}

type Classroom {
  classroom_id: Float!
  classroom_name: String!
  description: String!
  createdAt: DateTime!
  student: [Student!]
  course: [Course!]
}

type Token {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
}

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

type Auth {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
}

type CurrentUser {
  user_id: Int!
  user_name: String!
  first_name: String!
  last_name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  role: RoleCodeEnum!
}

enum RoleCodeEnum {
  ADMIN
  TEACHER
  STUDENT
}

type Query {
  getClassrooms: [Classroom!]!
  getClassroom(id: Int!): Classroom!
  GetTeachers: [Teacher!]!
  GetTeacher(id: Int!): Teacher!
  GetStudents(hasClassroom: Boolean): [Student!]!
  getStudent(id: Int!): Student!
  getCurrentUser: CurrentUser!
  GetTopics: [Topic!]!
  getTopicsByAuthor(authorID: Int!): [Topic!]!
  getTopicsByCourseId(courseID: Int!): [Topic!]!
  getSubjects: [Subject!]!
  getSubject(id: Int!): Subject!
  getCourses: [Course!]!
  getCourse(id: Int!): Course!
}

type Mutation {
  creatClassroom(createClassromm: CreateClassroom!): Classroom!
  editClassromm(editClassromm: UpdateClassroom!): Classroom!
  deleteClassroom(classroomId: Float!): Classroom!
  CreateTeacher(createTeacher: CreateTeacher!): Teacher!
  EditTeacher(editTeacher: UpdateTeacher!): Teacher!
  deleteTeacher(teacherId: Float!): Teacher!
  CreateStudent(createStudent: CreateStudent!): Student!
  EditStudent(editStudent: UpdateStudent!): Student!
  deleteStudent(studentId: Float!): Student!
  signup(data: SignupInput!): Auth!
  login(data: LoginInput!): Auth!
  refreshToken(token: JWT!): Token!
  CreateTopic(createTopic: CreateTopic!, courseId: CourseId): Topic!
  EditTopic(editTopic: UpdateTopic!, topicId: Int!): Topic!
  deleteTopic(topicId: Float!): Topic!
  createSubject(createSubject: CreateSubjectInput!): Subject!
  editSubject(id: Int!, editSubject: UpdateSubjectInput!): Subject!
  deleteSubject(id: Int!): Subject!
  createCourse(createCourseInput: CreateCourseInput!): Course!
  editCourse(updateCourseInput: UpdateCourseInput!): Course!
  deleteCourse(id: Int!): Course!
}

input CreateClassroom {
  classroom_name: String!
  description: String!
  studentsIds: [StudentsIds!]
  teachersIds: [TeachersIds!]
}

input StudentsIds {
  student_id: Float!
}

input TeachersIds {
  teacher_id: Float!
  subject_id: Float!
}

input UpdateClassroom {
  classroom_name: String
  description: String
  studentsIds: [StudentsIds!]
  teachersIds: [TeachersIds!]
  classroom_id: Float!
}

input CreateTeacher {
  first_name: String!
  last_name: String!
  user_name: String!
  email: String!
  password: String!
  classrooms: [ClassroomInput!]
}

input ClassroomInput {
  classroom_id: Float!
  subject_id: Float!
}

input UpdateTeacher {
  first_name: String
  last_name: String
  user_name: String
  email: String
  password: String
  classrooms: [ClassroomInput!]
  teacher_id: Float!
}

input CreateStudent {
  first_name: String!
  last_name: String!
  user_name: String!
  email: String!
  password: String!
  classroom_id: Float
}

input UpdateStudent {
  first_name: String
  last_name: String
  user_name: String
  email: String
  password: String
  classroom_id: Float
  student_id: Float!
}

input SignupInput {
  email: String!
  user_name: String!
  first_name: String!
  last_name: String!
  role: RoleCodeEnum!
}

input LoginInput {
  email: String!
  password: String!
}

input CreateTopic {
  content: String!
}

input CourseId {
  classroom_id: Float
  teacher_id: Float
  subject_id: Float
}

input UpdateTopic {
  content: String
}

input CreateSubjectInput {
  """Example field (placeholder)"""
  name: String!
}

input UpdateSubjectInput {
  """Example field (placeholder)"""
  name: String
}

input CreateCourseInput {
  """Example field (placeholder)"""
  subject_id: Int!

  """Example field (placeholder)"""
  teacher_id: Int!

  """Example field (placeholder)"""
  classroom_id: Int!
}

input UpdateCourseInput {
  """Example field (placeholder)"""
  subject_id: Int

  """Example field (placeholder)"""
  teacher_id: Int

  """Example field (placeholder)"""
  classroom_id: Int
  id: Int!
}