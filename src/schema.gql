# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  user_id: Int!
  user_name: String!
  first_name: String!
  last_name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ClassroomTest {
  classroom_id: Float!
  classroom_name: String!
  createdAt: DateTime!
}

type Student {
  student_id: Float!
  classroom: ClassroomTest
  user: User!
}

type Teacher {
  teacher_id: Int!
  user: User!
}

type Classroom {
  classroom_id: String!
  classroom_name: String!
  createdAt: String!
  student: [Student!]
  teacher: [Teacher!]
  subject: [String!]
}

type Token {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
}

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

type Auth {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
}

type CurrentUser {
  user_id: Int!
  user_name: String!
  first_name: String!
  last_name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  role: RoleCodeEnum!
}

enum RoleCodeEnum {
  ADMIN
  TEACHER
  STUDENT
}

type Query {
  getClassromms: [Classroom!]!
  getClassromm(id: Int!): Classroom!
  GetTeachers: [Teacher!]!
  GetTeacher(id: Int!): Teacher!
  GetStudents: [Student!]!
  getStudent(id: Int!): Student!
  getCurrentUser: CurrentUser!
}

type Mutation {
  creatClassroom(classroom: String!, teachersId: [Int!]! = [], studentsId: [Int!]! = []): Classroom!
  editClassromm(editTeacher: UpdateClassroom!, id: Int!): Classroom!
  deleteClassroom(classroomId: Float!): Classroom!
  CreateTeacher(createTeacher: CreateTeacher!): Teacher!
  EditTeacher(editTeacher: UpdateTeacher!, id: Int!): Teacher!
  deleteTeacher(teacherId: Float!): Teacher!
  CreateStudent(createStudent: CreateStudent!): Student!
  EditStudent(editStudent: UpdateStudent!, id: Int!): Student!
  deleteStudent(teacherId: Float!): Student!
  signup(data: SignupInput!): Auth!
  login(data: LoginInput!): Auth!
  refreshToken(token: JWT!): Token!
}

input UpdateClassroom {
  classroom_name: String
  subjects: [String!] = []
  students: [String!] = []
  teachers: [String!] = []
}

input CreateTeacher {
  first_name: String!
  last_name: String!
  user_name: String!
  email: String!
  password: String!
}

input UpdateTeacher {
  first_name: String
  last_name: String
  user_name: String
  email: String
  password: String
}

input CreateStudent {
  first_name: String!
  last_name: String!
  user_name: String!
  email: String!
  password: String!
  classroom_id: Float
}

input UpdateStudent {
  first_name: String
  last_name: String
  user_name: String
  email: String
  password: String
  classroom_id: Float
}

input SignupInput {
  email: String!
  user_name: String!
  first_name: String!
  last_name: String!
  role: RoleCodeEnum!
}

input LoginInput {
  email: String!
  password: String!
}